package ec.redcode.tas.on.facturacion;

import ec.redcode.tas.on.facturacion.jaxb.*;
import org.junit.Test;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class FacturaUnmarshallTest {

    @Test
    public void testFacturaUnmarshall() throws JAXBException {
        Factura factura = new Factura();
        factura.setId("comprobante");
        factura.setVersion("1.0.0");
        InfoTributaria infoTributaria = new InfoTributaria();
        infoTributaria.setAmbiente("1");
        infoTributaria.setTipoEmision("1");
        infoTributaria.setRazonSocial("Distribuidora de Suministros Nacional S.A.");
        infoTributaria.setNombreComercial("Empresa Importadora y Exportadora de Piezas");
        infoTributaria.setRuc("1792146739001");
        infoTributaria.setClaveAcceso("2110201101179214673900110020010000000011234567813");
        infoTributaria.setCodDoc("01");
        infoTributaria.setEstab("002");
        infoTributaria.setSecuencial("000000001");
        infoTributaria.setDirMatriz("Enrique Guerrero Portilla OE1-34 AV. Galo Plaza Lasso");
        factura.setInfoTributaria(infoTributaria);
        InfoFactura infoFactura = new InfoFactura();
        infoFactura.setFechaEmision("21/10/2012");
        infoFactura.setDirEstablecimiento("Sebastián Moreno S/N Francisco García");
        infoFactura.setContribuyenteEspecial("5368");
        infoFactura.setObligadoContabilidad("SI");
        infoFactura.setTipoIdentificacionComprador("04");
        infoFactura.setGuiaRemision("001-001-000000001");
        infoFactura.setRazonSocialComprador("PRUEBAS SERVICIO DE RENTAS INTERNAS");
        infoFactura.setIdentificacionComprador("1713328506001");
        infoFactura.setDireccionComprador("salinas y santiago");
        infoFactura.setTotalSinImpuestos(new BigDecimal(295000.00));
        infoFactura.setTotalDescuento(new BigDecimal(5005.00));
        TotalConImpuestos totalConImpuestos = new TotalConImpuestos();
        TotalImpuesto totalImpuesto = new TotalImpuesto();
        totalImpuesto.setCodigo("3");
        totalImpuesto.setCodigoPorcentaje("3072");
        totalImpuesto.setBaseImponible(new BigDecimal(295000.00));
        totalImpuesto.setValor(new BigDecimal(14750.00));
        List<TotalImpuesto> totalImpuestos = new ArrayList<>();
        totalImpuestos.add(totalImpuesto);
        totalImpuesto = new TotalImpuesto();
        totalImpuesto.setCodigo("2");
        totalImpuesto.setCodigoPorcentaje("2");
        totalImpuesto.setDescuentoAdicional(new BigDecimal(5.00));
        totalImpuesto.setBaseImponible(new BigDecimal(309750.00));
        totalImpuesto.setValor(new BigDecimal(37169.40));
        totalImpuestos.add(totalImpuesto);
        totalImpuesto = new TotalImpuesto();
        totalImpuesto.setCodigo("5");
        totalImpuesto.setCodigoPorcentaje("5001");
        totalImpuesto.setBaseImponible(new BigDecimal(12000.00));
        totalImpuesto.setValor(new BigDecimal(240.00));
        totalImpuestos.add(totalImpuesto);
        totalConImpuestos.setTotalImpuesto(totalImpuestos);
        infoFactura.setPropina(new BigDecimal(0.00));
        infoFactura.setTotalConImpuestos(totalConImpuestos);
        infoFactura.setImporteTotal(new BigDecimal(347159.40));
        infoFactura.setMoneda("DOLAR");
        Pagos pagos = new Pagos();
        Pago pago = new Pago();
        pago.setFormaPago("01");
        pago.setTotal(new BigDecimal(347159.40));
        pago.setPlazo("30");
        pago.setUnidadTiempo("dias");
        List<Pago> pagoList = new ArrayList<>();
        pagoList.add(pago);
        pagos.setPago(pagoList);
        infoFactura.setPagos(pagos);
        infoFactura.setValorRetIva(new BigDecimal(10620.00));
        infoFactura.setValorRetRenta(new BigDecimal(2950.00));
        Detalles detalles = new Detalles();
        Detalle detalle = new Detalle();
        detalle.setCodigoPrincipal("125BJC-01");
        detalle.setCodigoAuxiliar("1234D56789-A");
        detalle.setDescripcion("CAMIONETA 4X4 DIESEL 3.7");
        detalle.setCantidad(new BigDecimal(10.00));
        detalle.setPrecioUnitario(new BigDecimal(300000.00));
        detalle.setDescuento(new BigDecimal(5000.00));
        detalle.setPrecioTotalSinImpuesto(new BigDecimal(295000.00));
        DetallesAdicionales detallesAdicionales = new DetallesAdicionales();
        DetAdicional detAdicional = new DetAdicional();
        detAdicional.setNombre("Marca Chevrolet");
        detAdicional.setValor("Chevrolet");
        List<DetAdicional> detAdicionalList = new ArrayList<>();
        detAdicionalList.add(detAdicional);
        detAdicional = new DetAdicional();
        detAdicional.setNombre("Modelo");
        detAdicional.setValor("2012");
        detAdicionalList.add(detAdicional);
        detAdicional = new DetAdicional();
        detAdicional.setNombre("Chasis");
        detAdicional.setValor("8LDETA03V20003289");
        detAdicionalList.add(detAdicional);
        detallesAdicionales.setDetAdicional(detAdicionalList);
        detalle.setDetallesAdicionales(detallesAdicionales);
        List<Detalle> detalleList = new ArrayList<>();
        detalleList.add(detalle);
        detalles.setDetalle(detalleList);
        Impuestos impuestos = new Impuestos();
        Impuesto impuesto = new Impuesto();
        impuesto.setCodigo("3");
        impuesto.setCodigoPorcentaje("3072");
        impuesto.setTarifa(new BigDecimal(5));
        impuesto.setBaseImponible(new BigDecimal(295000.00));
        impuesto.setValor(new BigDecimal(14750.00));
        List<Impuesto> impuestoList = new ArrayList<>();
        impuestoList.add(impuesto);
        impuesto = new Impuesto();
        impuesto.setCodigo("2");
        impuesto.setCodigoPorcentaje("2");
        impuesto.setTarifa(new BigDecimal(12));
        impuesto.setBaseImponible(new BigDecimal(309750.00));
        impuesto.setValor(new BigDecimal(37170.00));
        impuestoList.add(impuesto);
        impuesto = new Impuesto();
        impuesto.setCodigo("5");
        impuesto.setCodigoPorcentaje("5001");
        impuesto.setTarifa(new BigDecimal(0.02));
        impuesto.setBaseImponible(new BigDecimal(12000.00));
        impuesto.setValor(new BigDecimal(240.00));
        impuestoList.add(impuesto);
        impuestos.setImpuesto(impuestoList);
        detalle.setImpuestos(impuestos);
        factura.setDetalles(detalles);
        InfoAdicional infoAdicional = new InfoAdicional();
        List<CampoAdicional> campoAdicionalList = new ArrayList<>();
        CampoAdicional campoAdicional = new CampoAdicional();
        campoAdicional.setNombre("Codigo Impuesto ISD");
        campoAdicional.setValue("4580");
        campoAdicionalList.add(campoAdicional);
        campoAdicional = new CampoAdicional();
        campoAdicional.setNombre("Impuesto ISD");
        campoAdicional.setValue("15.42x");
        campoAdicionalList.add(campoAdicional);
        infoAdicional.setCampoAdicional(campoAdicionalList);
        factura.setInfoAdicional(infoAdicional);
        factura.setInfoFactura(infoFactura);
        JAXBContext jaxbContext = JAXBContext.newInstance(Factura.class);
        Marshaller jaxbMarshaller = jaxbContext.createMarshaller();
        jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
        jaxbMarshaller.marshal(factura, System.out);
    }

}
